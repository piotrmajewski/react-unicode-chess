{"version":3,"sources":["Chessboard.js","App.js","reportWebVitals.js","index.js"],"names":["Piece","color","type","className","black","pawn","king","knight","bishop","rook","queen","white","Field","fieldColor","content","rowNumber","columnNumber","selected","handleClick","row","column","onClick","piece","Row","map","Chessboard","currentPosition","types","pw","rw","nw","bw","qw","kw","pb","rb","nb","bb","initialPosition","App","state","undefined","field","setState","nextPosition","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c02124d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Chessboard.css\";\n\nconst Piece = ({ color, type }) => {\n  const pieces = {\n    black: {\n      pawn: \"\\u265f\",\n      king: \"\\u265a\",\n      knight: \"\\u265e\",\n      bishop: \"\\u265d\",\n      rook: \"\\u265c\",\n      queen: \"\\u265b\"\n    },\n    white: {\n      pawn: \"\\u2659\",\n      king: \"\\u2654\",\n      knight: \"\\u2658\",\n      bishop: \"\\u2657\",\n      rook: \"\\u2656\",\n      queen: \"\\u2655\"\n    }\n  };\n\n  return <div className=\"Piece\">{pieces[color][type]}</div>;\n};\n\nconst Field = ({\n  fieldColor,\n  content,\n  rowNumber,\n  columnNumber,\n  selected,\n  handleClick\n}) => (\n  <div\n    className={selected && rowNumber === selected.row && columnNumber === selected.column\n      ? \"Field Field_Selected\"\n      : fieldColor === \"black\" ? \"Field Field_Black\" : \"Field Field_White\"}\n    onClick={() => handleClick({ row: rowNumber, column: columnNumber })}\n  >\n    {content.piece && <Piece color={content.color} type={content.piece} />}\n  </div>\n);\n\nconst Row = ({ row, rowNumber, selected, handleClick }) => (\n  <div className=\"Row\">\n    {row.map((content, columnNumber) => (\n      <Field\n        key={columnNumber}\n        fieldColor={(rowNumber + columnNumber) % 2 !== 0 ? \"black\" : \"white\"}\n        content={content}\n        rowNumber={rowNumber}\n        columnNumber={columnNumber}\n        selected={selected}\n        handleClick={handleClick}\n      />\n    ))}\n  </div>\n);\n\nconst Chessboard = ({ currentPosition, selected, handleClick }) =>\n  currentPosition.map((row, rowNumber) => {\n    return (\n      <Row\n        key={rowNumber}\n        row={row}\n        rowNumber={rowNumber}\n        selected={selected}\n        handleClick={handleClick} />\n    );\n  });\n\nexport default Chessboard;\n","import React, { Component } from \"react\";\nimport Chessboard from \"./Chessboard.js\";\nimport \"./App.css\";\n\nconst types = [\"pawn\", \"rook\", \"knight\", \"bishop\", \"queen\", \"king\"];\nconst [pw, rw, nw, bw, qw, kw] = types.map(type => ({\n  piece: type,\n  color: \"white\"\n}));\nconst [pb, rb, nb, bb, qb, kb] = types.map(type => ({\n  piece: type,\n  color: \"black\"\n}));\nconst initialPosition = [\n  [rb, nb, bb, qb, kb, bb, nb, rb],\n  [pb, pb, pb, pb, pb, pb, pb, pb],\n  [{}, {}, {}, {}, {}, {}, {}, {}],\n  [{}, {}, {}, {}, {}, {}, {}, {}],\n  [{}, {}, {}, {}, {}, {}, {}, {}],\n  [{}, {}, {}, {}, {}, {}, {}, {}],\n  [pw, pw, pw, pw, pw, pw, pw, pw],\n  [rw, nw, bw, qw, kw, bw, nw, rw]\n];\n\nclass App extends Component {\n  state = {\n    currentPosition: initialPosition,\n    selected: undefined\n  };\n\n  onClick = field => {\n    if (this.state.selected !== undefined)\n    {\n      // there is a piece selected previously,\n      // so this is an attempt to move it\n      if (\n        field.row === this.state.selected.row &&\n        field.column === this.state.selected.column\n      )\n      {\n        // the selected pieced was clicked again\n        // - unselect it\n        this.setState({\n          selected: undefined\n        });\n      }\n      else\n      {\n        const nextPosition = this.state.currentPosition;\n        // TODO: validate move\n        nextPosition[field.row][field.column] = this.state.currentPosition[\n          this.state.selected.row\n        ][this.state.selected.column];\n        nextPosition[this.state.selected.row][this.state.selected.column] = {};\n        this.setState({\n          currentPosition: nextPosition,\n          selected: undefined\n        });\n      }\n    }\n    else if (this.state.currentPosition[field.row][field.column].piece) {\n      // a clicked piece should be selected\n      this.setState({ selected: { row: field.row, column: field.column } });\n    }\n  };\n\n  render() {\n    const { currentPosition, selected } = this.state;\n    return (\n      <div className=\"App\">\n        <Chessboard\n          currentPosition={currentPosition}\n          selected={selected}\n          handleClick={this.onClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}